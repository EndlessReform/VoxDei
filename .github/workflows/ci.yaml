name: CI
on:
  push:
    branches:
      # Change this if your primary branch is not main
      - main
      # TEMPORARY: Remove this once things are working
      - history-ci
  pull_request:

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - name: Install Node dependencies
        run: npm install --frozen-lockfile
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local # the path depends on the OS
          key: poetry-0 # increment to reset cache
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
      - name: Find Poetry Projects
        id: poetry-projects
        run: |
          echo "POETRY_PROJECTS=$(find . -name 'poetry.lock' -exec dirname {} \; | jq -R -s -c 'split(\"\n\")[:-1]')" >> $GITHUB_ENV

      - name: Cache Python Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ join(fromJson(env.POETRY_PROJECTS), '\n') }}
            **/.venv
          key: ${{ runner.os }}-python-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-
      - name: Install Python Dependencies
        run: |
          npx nx run-many --target=install --all --verbose
      - name: Inefficient build
        run: npx nx run-many --target=build --all --verbose
